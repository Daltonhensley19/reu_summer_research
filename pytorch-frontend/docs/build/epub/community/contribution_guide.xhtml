<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>PyTorch Contribution Guide</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/katex@0.10.0-beta/dist/katex.min.css" />
    <link rel="stylesheet" type="text/css" href="../_static/css/jit.css" />
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.css" />
    <link rel="stylesheet" type="text/css" href="../_static/katex-math.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="pytorch-contribution-guide">
<h1>PyTorch Contribution Guide</h1>
<p>PyTorch is a GPU-accelerated Python tensor computation package for
building deep neural networks built on tape-based autograd systems.</p>
<div class="section" id="the-pytorch-contribution-process">
<h2>The PyTorch Contribution Process</h2>
<p>The PyTorch organization is governed by <a class="reference internal" href="governance.xhtml"><span class="doc">PyTorch
Governance</span></a>.</p>
<p>The PyTorch development process involves a healthy amount of open
discussions between the core development team and the community.</p>
<p>PyTorch operates similar to most open source projects on GitHub.
However, if you’ve never contributed to an open source project before,
here is the basic process.</p>
<ul class="simple">
<li><p><strong>Figure out what you’re going to work on.</strong> The majority of open
source contributions come from people scratching their own itches.
However, if you don’t know what you want to work on, or are just
looking to get more acquainted with the project, here are some tips
for how to find appropriate tasks:</p>
<ul>
<li><p>Look through the <a class="reference external" href="https://github.com/pytorch/pytorch/issues/">issue
tracker</a><span class="link-target"> [https://github.com/pytorch/pytorch/issues/]</span> and see if
there are any issues you know how to fix. Issues that are
confirmed by other contributors tend to be better to investigate.
We also maintain some labels for issues which are likely to be
good for new people, e.g., <strong>bootcamp</strong> and <strong>1hr</strong>, although
these labels are less well maintained.</p></li>
<li><p>Join us on Slack and let us know you’re interested in getting to
know PyTorch. We’re very happy to help out researchers and
partners get up to speed with the codebase.</p></li>
</ul>
</li>
<li><p><strong>Figure out the scope of your change and reach out for design
comments on a GitHub issue if it’s large.</strong> The majority of pull
requests are small; in that case, no need to let us know about what
you want to do, just get cracking. But if the change is going to be
large, it’s usually a good idea to get some design comments about it
first.</p>
<ul>
<li><p>If you don’t know how big a change is going to be, we can help you
figure it out! Just post about it on issues or Slack.</p></li>
<li><p>Some feature additions are very standardized; for example, lots of
people add new operators or optimizers to PyTorch. Design
discussion in these cases boils down mostly to, “Do we want this
operator/optimizer?” Giving evidence for its utility, e.g., usage
in peer reviewed papers, or existence in other frameworks, helps a
bit when making this case.</p>
<ul>
<li><p><strong>Adding operators / algorithms from recently-released research</strong>
is generally not accepted, unless there is overwhelming evidence that
this newly published work has ground-breaking results and will eventually
become a standard in the field. If you are not sure where your method falls,
open an issue first before implementing a PR.</p></li>
</ul>
</li>
<li><p>Core changes and refactors can be quite difficult to coordinate,
as the pace of development on PyTorch master is quite fast.
Definitely reach out about fundamental or cross-cutting changes;
we can often give guidance about how to stage such changes into
more easily reviewable pieces.</p></li>
</ul>
</li>
<li><p><strong>Code it out!</strong></p>
<ul>
<li><p>See the technical guide for advice for working with PyTorch in a
technical form.</p></li>
</ul>
</li>
<li><p><strong>Open a pull request.</strong></p>
<ul>
<li><p>If you are not ready for the pull request to be reviewed, tag it
with [WIP]. We will ignore it when doing review passes. If you are
working on a complex change, it’s good to start things off as WIP,
because you will need to spend time looking at CI results to see
if things worked out or not.</p></li>
<li><p>Find an appropriate reviewer for your change. We have some folks
who regularly go through the PR queue and try to review
everything, but if you happen to know who the maintainer for a
given subsystem affected by your patch is, feel free to include
them directly on the pull request. You can learn more about this
structure at PyTorch Subsystem Ownership.</p></li>
</ul>
</li>
<li><p><strong>Iterate on the pull request until it’s accepted!</strong></p>
<ul>
<li><p>We’ll try our best to minimize the number of review roundtrips and
block PRs only when there are major issues. For the most common
issues in pull requests, take a look at <a class="reference external" href="#common-mistakes-to-avoid">Common Mistakes</a>.</p></li>
<li><p>Once a pull request is accepted and CI is passing, there is
nothing else you need to do; we will merge the PR for you.</p></li>
</ul>
</li>
</ul>
</div>
<div class="section" id="getting-started">
<h2>Getting Started</h2>
<div class="section" id="proposing-new-features">
<h3>Proposing new features</h3>
<p>New feature ideas are best discussed on a specific issue. Please include
as much information as you can, any accompanying data, and your proposed
solution. The PyTorch team and community frequently reviews new issues
and comments where they think they can help. If you feel confident in
your solution, go ahead and implement it.</p>
</div>
<div class="section" id="reporting-issues">
<h3>Reporting Issues</h3>
<p>If you’ve identified an issue, first search through the <a class="reference external" href="https://github.com/pytorch/pytorch/issues">list of
existing issues</a><span class="link-target"> [https://github.com/pytorch/pytorch/issues]</span> on the
repo. If you are unable to find a similar issue, then create a new one.
Supply as much information you can to reproduce the problematic
behavior. Also, include any additional insights like the behavior you
expect.</p>
</div>
<div class="section" id="implementing-features-or-fixing-bugs">
<h3>Implementing Features or Fixing Bugs</h3>
<p>If you want to fix a specific issue, it’s best to comment on the
individual issue with your intent. However, we do not lock or assign
issues except in cases where we have worked with the developer before.
It’s best to strike up a conversation on the issue and discuss your
proposed solution. The PyTorch team can provide guidance that saves you
time.</p>
<p>Issues that are labeled first-new-issue, low, or medium priority provide
the best entrance point are great places to start.</p>
</div>
<div class="section" id="adding-tutorials">
<h3>Adding Tutorials</h3>
<p>A great deal of the tutorials on <a class="reference external" href="https://pytorch.org/">pytorch.org</a><span class="link-target"> [https://pytorch.org/]</span>
come from the community itself and we welcome additional contributions.
To learn more about how to contribute a new tutorial you can learn more
here: <a class="reference external" href="https://github.com/pytorch/tutorials/#contributing">PyTorch.org Tutorial Contribution Guide on
Github</a><span class="link-target"> [https://github.com/pytorch/tutorials/#contributing]</span></p>
</div>
<div class="section" id="improving-documentation-tutorials">
<h3>Improving Documentation &amp; Tutorials</h3>
<p>We aim to produce high quality documentation and tutorials. On rare
occasions that content includes typos or bugs. If you find something you
can fix, send us a pull request for consideration.</p>
<p>Take a look at the <a class="reference external" href="#on-documentation">Documentation</a> section to learn how our system
works.</p>
</div>
<div class="section" id="participating-in-online-discussions">
<h3>Participating in online discussions</h3>
<p>You can find active discussions happening on the PyTorch Discussion
<a class="reference external" href="https://discuss.pytorch.org/">forum</a><span class="link-target"> [https://discuss.pytorch.org/]</span>.</p>
</div>
<div class="section" id="submitting-pull-requests-to-fix-open-issues">
<h3>Submitting pull requests to fix open issues</h3>
<p>You can view a list of all open issues
<a class="reference external" href="https://github.com/pytorch/pytorch/issues">here</a><span class="link-target"> [https://github.com/pytorch/pytorch/issues]</span>. Commenting on an
issue is a great way to get the attention of the team. From here you can
share your ideas and how you plan to resolve the issue.</p>
<p>For more challenging issues, the team will provide feedback and
direction for how to best solve the issue.</p>
<p>If you’re not able to fix the issue itself, commenting and sharing
whether you can reproduce the issue can be useful for helping the team
identify problem areas.</p>
</div>
<div class="section" id="reviewing-open-pull-requests">
<h3>Reviewing open pull requests</h3>
<p>We appreciate your help reviewing and commenting on pull requests. Our
team strives to keep the number of open pull requests at a manageable
size, we respond quickly for more information if we need it, and we
merge PRs that we think are useful. However, due to the high level of
interest, additional eyes on pull requests is appreciated.</p>
</div>
<div class="section" id="improving-code-readability">
<h3>Improving code readability</h3>
<p>Improve code readability helps everyone. It is often better to submit a
small number of pull requests that touch few files versus a large pull
request that touches many files. Starting a discussion in the PyTorch
forum <a class="reference external" href="https://discuss.pytorch.org/">here</a><span class="link-target"> [https://discuss.pytorch.org/]</span> or on an issue related to
your improvement is the best way to get started.</p>
</div>
<div class="section" id="adding-test-cases-to-make-the-codebase-more-robust">
<h3>Adding test cases to make the codebase more robust</h3>
<p>Additional test coverage is appreciated.</p>
</div>
<div class="section" id="promoting-pytorch">
<h3>Promoting PyTorch</h3>
<p>Your use of PyTorch in your projects, research papers, write ups, blogs,
or general discussions around the internet helps to raise awareness for
PyTorch and our growing community. Please reach out to
<a class="reference external" href="http://mailto:pytorch-marketing&#64;fb.com/">pytorch-marketing&#64;fb.com</a><span class="link-target"> [http://mailto:pytorch-marketing&#64;fb.com/]</span>
for marketing support.</p>
</div>
<div class="section" id="triaging-issues">
<h3>Triaging issues</h3>
<p>If you feel that an issue could benefit from a particular tag or level
of complexity comment on the issue and share your opinion. If an you
feel an issue isn’t categorized properly comment and let the team know.</p>
</div>
</div>
<div class="section" id="about-open-source-development">
<h2>About open source development</h2>
<p>If this is your first time contributing to an open source project, some
aspects of the development process may seem unusual to you.</p>
<ul class="simple">
<li><p><strong>There is no way to “claim” issues.</strong> People often want to “claim”
an issue when they decide to work on it, to ensure that there isn’t
wasted work when someone else ends up working on it. This doesn’t
really work too well in open source, since someone may decide to work
on something, and end up not having time to do it. Feel free to give
information in an advisory fashion, but at the end of the day, we
will take running code and rough consensus.</p></li>
<li><p><strong>There is a high bar for new functionality that is added.</strong> Unlike
in a corporate environment, where the person who wrote code
implicitly “owns” it and can be expected to take care of it in the
beginning of its lifetime, once a pull request is merged into an open
source project, it immediately becomes the collective responsibility
of all maintainers on the project. When we merge code, we are saying
that we, the maintainers, are able to review subsequent changes and
make a bugfix to the code. This naturally leads to a higher standard
of contribution.</p></li>
</ul>
</div>
<div class="section" id="common-mistakes-to-avoid">
<h2>Common Mistakes To Avoid</h2>
<ul class="simple">
<li><p><strong>Did you add tests?</strong> (Or if the change is hard to test, did you
describe how you tested your change?)</p>
<ul>
<li><p>We have a few motivations for why we ask for tests:</p>
<ol class="arabic simple">
<li><p>to help us tell if we break it later</p></li>
<li><p>to help us tell if the patch is correct in the first place
(yes, we did review it, but as Knuth says, “beware of the
following code, for I have not run it, merely proven it
correct”)</p></li>
</ol>
</li>
<li><p>When is it OK not to add a test? Sometimes a change can’t be
conveniently tested, or the change is so obviously correct (and
unlikely to be broken) that it’s OK not to test it. On the
contrary, if a change is seems likely (or is known to be likely)
to be accidentally broken, it’s important to put in the time to
work out a testing strategy.</p></li>
</ul>
</li>
<li><p><strong>Is your PR too long?</strong></p>
<ul>
<li><p>It’s easier for us to review and merge small PRs. Difficulty of
reviewing a PR scales nonlinearly with its size.</p></li>
<li><p>When is it OK to submit a large PR? It helps a lot if there was a
corresponding design discussion in an issue, with sign off from
the people who are going to review your diff. We can also help
give advice about how to split up a large change into individually
shippable parts. Similarly, it helps if there is a complete
description of the contents of the PR: it’s easier to review code
if we know what’s inside!</p></li>
</ul>
</li>
<li><p><strong>Comments for subtle things?</strong> In cases where behavior of your code
is nuanced, please include extra comments and documentation to allow
us to better understand the intention of your code.</p></li>
<li><p><strong>Did you add a hack?</strong> Sometimes a hack is the right answer. But
usually we will have to discuss it.</p></li>
<li><p><strong>Do you want to touch a very core component?</strong> In order to prevent
major regressions, pull requests that touch core components receive
extra scrutiny. Make sure you’ve discussed your changes with the team
before undertaking major changes.</p></li>
<li><p><strong>Want to add a new feature?</strong> If you want to add new features,
comment your intention on the related issue. Our team tries to
comment on and provide feedback to the community. It’s better to have
an open discussion with the team and the rest of the community prior
to building new features. This helps us stay aware of what you’re
working on and increases the chance that it’ll be merged.</p></li>
<li><p><strong>Did you touch unrelated code to the PR?</strong> To aid in code review,
please only include files in your pull request that are directly
related to your changes.</p></li>
</ul>
</div>
<div class="section" id="frequently-asked-questions">
<h2>Frequently asked questions</h2>
<ul class="simple">
<li><p><strong>How can I contribute as a reviewer?</strong> There is lots of value if
community developer reproduce issues, try out new functionality, or
otherwise help us identify or troubleshoot issues. Commenting on
tasks or pull requests with your environment details is helpful and
appreciated.</p></li>
<li><p><strong>CI tests failed, what does it mean?</strong> Maybe you need to merge with
master or rebase with latest changes. Pushing your changes should
re-trigger CI tests. If the tests persist, you’ll want to trace
through the error messages and resolve the related issues.</p></li>
<li><p><strong>What are the most high risk changes?</strong> Anything that touches build
configuration is an risky area. Please avoid changing these unless
you’ve had a discussion with the team beforehand.</p></li>
<li><p><strong>Hey, a commit showed up on my branch, what’s up with that?</strong>
Sometimes another community member will provide a patch or fix to
your pull request or branch. This is often needed for getting CI tests
to pass.</p></li>
</ul>
</div>
<div class="section" id="on-documentation">
<h2>On Documentation</h2>
<div class="section" id="python-docs">
<h3>Python Docs</h3>
<p>PyTorch documentation is generated from python source using
<a class="reference external" href="https://www.sphinx-doc.org/en/master/">Sphinx</a><span class="link-target"> [https://www.sphinx-doc.org/en/master/]</span>. Generated HTML is
copied to the docs folder in the master branch of
<a class="reference external" href="https://github.com/pytorch/pytorch.github.io/tree/master/docs">pytorch.github.io</a><span class="link-target"> [https://github.com/pytorch/pytorch.github.io/tree/master/docs]</span>,
and is served via GitHub pages.</p>
<ul class="simple">
<li><p>Site: <a class="reference external" href="https://pytorch.org/docs">https://pytorch.org/docs</a></p></li>
<li><p>GitHub: <a class="reference external" href="https://github.com/pytorch/pytorch/tree/master/docs">https://github.com/pytorch/pytorch/tree/master/docs</a></p></li>
<li><p>Served from:
<a class="reference external" href="https://github.com/pytorch/pytorch.github.io/tree/master/docs">https://github.com/pytorch/pytorch.github.io/tree/master/doc</a><span class="link-target"> [https://github.com/pytorch/pytorch.github.io/tree/master/docs]</span></p></li>
</ul>
</div>
<div class="section" id="c-docs">
<h3>C++ Docs</h3>
<p>For C++ code we use Doxygen to generate the content files. The C++ docs
are built on a special server and the resulting files are copied to the
<a class="reference external" href="https://github.com/pytorch/cppdocs">https://github.com/pytorch/cppdocs</a> repo, and are served from GitHub
pages.</p>
<ul class="simple">
<li><p>Site: <a class="reference external" href="https://pytorch.org/cppdocs">https://pytorch.org/cppdocs</a></p></li>
<li><p>GitHub: <a class="reference external" href="https://github.com/pytorch/pytorch/tree/master/docs/cpp">https://github.com/pytorch/pytorch/tree/master/docs/cpp</a></p></li>
<li><p>Served from: <a class="reference external" href="https://github.com/pytorch/cppdocs">https://github.com/pytorch/cppdocs</a></p></li>
</ul>
</div>
</div>
<div class="section" id="tutorials">
<h2>Tutorials</h2>
<p>PyTorch tutorials are documents used to help understand using PyTorch to
accomplish specific tasks or to understand more holistic concepts.
Tutorials are built using
<a class="reference external" href="https://sphinx-gallery.readthedocs.io/en/latest/index.html">Sphinx-Gallery</a><span class="link-target"> [https://sphinx-gallery.readthedocs.io/en/latest/index.html]</span>
from executable python sources files, or from restructured-text (rst)
files.</p>
<ul class="simple">
<li><p>Site: <a class="reference external" href="https://pytorch.org/tutorials">https://pytorch.org/tutorials</a></p></li>
<li><p>GitHub: <a class="reference external" href="https://github.com/pytorch/tutorials">https://github.com/pytorch/tutorials</a></p></li>
</ul>
<div class="section" id="tutorials-build-overview">
<h3>Tutorials Build Overview</h3>
<p>For tutorials, <a class="reference external" href="https://github.com/pytorch/tutorials/pulls">pull
requests</a><span class="link-target"> [https://github.com/pytorch/tutorials/pulls]</span> trigger a
rebuild the entire site using CircleCI to test the effects of the
change. This build is sharded into 9 worker builds and takes around 40
minutes total. At the same time, we do a Netlify build using <em>make
html-noplot</em>, which builds the site without rendering the notebook
output into pages for quick review.</p>
<p>After a PR is accepted, the site is rebuilt and deployed from CircleCI.</p>
</div>
<div class="section" id="contributing-a-new-tutorial">
<h3>Contributing a new Tutorial</h3>
<p><a class="reference external" href="https://github.com/pytorch/tutorials/#contributing">PyTorch.org Tutorial Contribution
Guide</a><span class="link-target"> [https://github.com/pytorch/tutorials/#contributing]</span></p>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-90545585-1', 'auto');
  ga('send', 'pageview');

</script>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-117752657-2"></script>

<script>
  window.dataLayer = window.dataLayer || [];

  function gtag(){dataLayer.push(arguments);}

  gtag('js', new Date());
  gtag('config', 'UA-117752657-2');
</script>

<img height="1" width="1" style="border-style:none;" alt="" src="https://www.googleadservices.com/pagead/conversion/795629140/?label=txkmCPmdtosBENSssfsC&amp;guid=ON&amp;script=0"/>

  </body>
</html>